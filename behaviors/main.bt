{
    "1": {
        "id": 1,
        "class": "Sequence",
        "name": "",
        "asset-pack": "core",
        "args": [],
        "children": [
            40,
            253
        ],
        "decorators": []
    },
    "9": {
        "id": 9,
        "class": "Parallel",
        "name": "Listen for Commands",
        "asset-pack": "core",
        "parent": 253,
        "args": [
            false
        ],
        "children": [
            14,
            12
        ]
    },
    "10": {
        "id": 10,
        "class": "Subtree",
        "name": "Look Around",
        "asset-pack": "core",
        "parent": 14,
        "args": [
            "idle.bt",
            [
                "() => {",
                "    return {};",
                "}"
            ],
            [
                "(treeResult) => {",
                "}"
            ]
        ],
        "decorators": [
            11
        ]
    },
    "11": {
        "id": 11,
        "class": "SucceedOnEvent",
        "name": "",
        "asset-pack": "core",
        "args": [
            "listen",
            [
                "() => {",
                "}"
            ]
        ]
    },
    "12": {
        "id": 12,
        "class": "Listen",
        "name": "Parse Speech",
        "asset-pack": "core",
        "parent": 9,
        "args": [
            [
                "() => {",
                "    let options = {",
                "        heyJibo: true,",
                "        detectEnd: true,",
                "        incremental: false,",
                "        authenticateSpeaker: ''",
                "    }",
                "    return options;",
                "}"
            ],
            "lighting.rule",
            [
                "(listener) => {",
                "  listener.on('hey-jibo', (asrResult, speakerIds) => {",
                "      emitter.emit('listen')",
                "  });",
                "  listener.on('cloud', (asrResult, speakerIds) => {",
                "    console.log(asrResult);",
                "    notepad.action = (asrResult && asrResult.NLParse && asrResult.NLParse.action)",
                "      ? asrResult.NLParse.action : '';",
                "  });",
                "}"
            ]
        ]
    },
    "14": {
        "id": 14,
        "class": "Sequence",
        "name": "Wait for voice command",
        "asset-pack": "core",
        "parent": 9,
        "args": [],
        "children": [
            10,
            47
        ],
        "decorators": []
    },
    "16": {
        "id": 16,
        "class": "Parallel",
        "name": "Respond to Commands",
        "asset-pack": "core",
        "parent": 253,
        "args": [
            false
        ],
        "children": [
            80,
            18,
            19
        ]
    },
    "18": {
        "id": 18,
        "class": "PlayAnimation",
        "name": "Acknowledge Request",
        "asset-pack": "core",
        "parent": 16,
        "args": [
            "greeting.keys",
            [
                "(animation) => {",
                "}"
            ]
        ]
    },
    "19": {
        "id": 19,
        "class": "ExecuteScript",
        "name": "Alter Lighting",
        "asset-pack": "core",
        "parent": 16,
        "args": [
            [
                "() => {",
                "  blackboard.LightingController.takeAction(notepad.action);",
                "}"
            ]
        ]
    },
    "40": {
        "id": 40,
        "class": "ExecuteScript",
        "name": "Setup Philips Hue connectivity error handlers",
        "asset-pack": "core",
        "parent": 1,
        "args": [
            [
                "() => {",
                "  // Setup the events.",
                "  blackboard.LightingController.configureEvents();",
                "  blackboard.Emitter.on('userMessage', function(message){",
                "    jibo.tts.speak(message);",
                "  });",
                "  ",
                "  // Attempt to connect to the Hue bridge.",
                "  blackboard.LightingController.setupHueApi();",
                "}"
            ]
        ]
    },
    "47": {
        "id": 47,
        "class": "ExecuteScriptAsync",
        "name": "Face Center",
        "asset-pack": "core",
        "parent": 14,
        "args": [
            [
                "(succeed, fail) => {",
                "    let dofs = jibo.animate.dofs;",
                "    jibo.animate.centerRobot(dofs.ALL, true, () => {",
                "        jibo.animate.setLEDColor([0, 0, 1]);",
                "        succeed();    ",
                "    });",
                "}"
            ]
        ]
    },
    "80": {
        "id": 80,
        "class": "ExecuteScript",
        "name": "Turn off LED",
        "asset-pack": "core",
        "parent": 16,
        "args": [
            [
                "() => {",
                "  jibo.animate.setLEDColor([0, 0, 0]);",
                "}"
            ]
        ]
    },
    "253": {
        "id": 253,
        "class": "Sequence",
        "name": "",
        "asset-pack": "core",
        "parent": 1,
        "args": [],
        "decorators": [
            255
        ],
        "children": [
            9,
            16
        ]
    },
    "255": {
        "id": 255,
        "class": "WhileCondition",
        "name": "",
        "asset-pack": "core",
        "args": [
            [
                "() => {",
                "}"
            ],
            [
                "() => {",
                "    return true;",
                "}"
            ]
        ]
    }
}